-- vim.g.gruvbox_italic = false
-- local HEIGHT_RATIO = 1 -- You can change this
-- local WIDTH_RATIO = 1  -- You can change this too
-- local api = require("nvim-tree.api")
--
-- local function my_on_attach(bufnr)
--     local api = require "nvim-tree.api"
--
--     local function opts(desc)
--         return { desc = "nvim-tree: " .. desc, buffer = bufnr, noremap = true, silent = true, nowait = true }
--     end
--
--     -- default mappings
--     api.config.mappings.default_on_attach(bufnr)
--
--     -- custom mappings
--     vim.keymap.set('n', '<C-t>', api.tree.change_root_to_parent, opts('Up'))
--     vim.keymap.set('n', '?', api.tree.toggle_help, opts('Help'))
--     vim.keymap.set('n', '<CR>', api.node.open.replace_tree_buffer, opts(""))
--     -- vim.cmd [[
--     -- augroup MyAutoCommands
--     --     autocmd!
--     --     " Run the command for all buffers except 'specific_buffer_name'
--     --     autocmd BufEnter * lua if vim.fn.bufname('%') ~= 'NvimTree_1' then vim.cmd('echo "Autocommand triggered"') end
--     -- augroup END
--     -- vim.api.nvim_create_autocmd({ "BufEnter" },
--     --     {
--     --         callback = function()
--     --             -- vim.cmd(":NvimTreeClose")
--     --             api.node.open.replace_tree_buffer()
--     --         end
--     --     }
--     -- )
--     -- local api = require("nvim-tree.api")
--     local Event = api.events.Event
--
--     -- api.events.subscribe(Event.TreeClose, function(data)
--     --     -- api.node.open.replace_tree_buffer()
--     --     vim.cmd(":NvimTreeClose")
--     -- end)
-- end
--
-- require("nvim-tree").setup({
--     on_attach = my_on_attach,
--     view = {
--         -- float = {
--         --     enable = true,
--         --     open_win_config = function()
--         --         local screen_w = vim.opt.columns:get()
--         --         local screen_h = vim.opt.lines:get() - vim.opt.cmdheight:get()
--         --         local window_w = screen_w * WIDTH_RATIO
--         --         local window_h = screen_h * HEIGHT_RATIO
--         --         local window_w_int = math.floor(window_w)
--         --         local window_h_int = math.floor(window_h)
--         --         local center_x = (screen_w - window_w) / 2
--         --         local center_y = ((vim.opt.lines:get() - window_h) / 2)
--         --             - vim.opt.cmdheight:get()
--         --         return {
--         --             border = 'rounded',
--         --             relative = 'editor',
--         --             row = center_y,
--         --             col = center_x,
--         --             width = window_w_int,
--         --             height = window_h_int,
--         --         }
--         --     end,
--         -- },
--         -- width = function()
--         --     return math.floor(vim.opt.columns:get() * WIDTH_RATIO)
--         -- end,
--         width = "100%",
--     },
--     -- renderer = {
--     -- add_trailing = true,
--     -- icons = {
--     --     web_devicons = {
--     --         file = {
--     --             enable = false
--     --         },
--     --         folder = {
--     --             enable = false
--     --         }
--     --     },
--     --     show = {
--     --         folder = false,
--     --         file = false,
--     --         git = false,
--     --         modified = false,
--     --         diagnostics = false
--     --     }
--     -- }
--     -- }
-- })
-- local function open_nvim_tree()
--     -- open the tree
--     -- require("nvim-tree.api").tree.open()
-- end
-- vim.api.nvim_create_autocmd({ "VimEnter" },
--     {
--         callback = function()
--             open_nvim_tree()
--         end
--     }
-- )
-- vim.keymap.set({ "n", "v" }, "<C-b>", ":NvimTreeToggle<CR>")
